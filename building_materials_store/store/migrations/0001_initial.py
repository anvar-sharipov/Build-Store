# Generated by Django 5.2.1 on 2025-06-11 11:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='kategoriýa')),
            ],
            options={
                'verbose_name': 'kategoriýa',
                'verbose_name_plural': 'kategoriýalar',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2000, verbose_name='Işgär')),
            ],
            options={
                'verbose_name': 'Işgär',
                'verbose_name_plural': 'Işgärler',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2000, verbose_name='Partneryn ady')),
                ('type', models.CharField(choices=[('klient', 'Alyjy (Покупатель)'), ('supplier', 'Üpjünçi (Поставщик)'), ('both', 'Alyjy we Üpjünçi (Покупатель и поставщик)')], default='supplier', max_length=20, verbose_name='Partneriň görnüşi')),
            ],
            options={
                'verbose_name': 'Partner',
                'verbose_name_plural': 'Partnerler',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2000, verbose_name='Üpjünçiniň ady')),
            ],
            options={
                'verbose_name': 'Üpjünçi',
                'verbose_name_plural': 'Üpjünçiler',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='ölçeg birligi')),
            ],
            options={
                'verbose_name': 'ölçeg birligi',
                'verbose_name_plural': 'ölçeg birlikleri',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='harytyn ady')),
                ('sku', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='artikul')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='mukdary')),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='sena pokupki')),
                ('retail_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='sena prodaji')),
                ('wholesale_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='sena optom')),
                ('description', models.TextField(blank=True, verbose_name='beýany')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.category', verbose_name='kategoriýa')),
                ('unit_of_measurement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.unitofmeasurement', verbose_name='ölçeg birligi')),
            ],
            options={
                'verbose_name': 'haryt',
                'verbose_name_plural': 'harytlar',
            },
        ),
    ]
